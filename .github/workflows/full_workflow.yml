name: CI/CD pipeline

on:
  push:
    branches: [ dev ]

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python 3.10
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: "3.10"
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       make install
  #   - name: Test code
  #     run: |
  #       make test

  build-and-deploy:
    # needs: test
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
    
      - name: Install JQ
        run: sudo apt-get install jq
    
      # Print secret
      - name: Print secret
        run: echo "${{ secrets.GCP_SA_KEY }}"

      # Write the secret to the "service-key.json" file
      - name: Write GCP SA key to file
        run: echo -n "${{ secrets.GCP_SA_KEY }}" | jq '.' > service-key.json

      # Print json file
      - name: Print entire JSON file
        run: cat service-key.json


      # Do the rest
      - name: Authenticate with gcloud
        run: |
          gcloud auth activate-service-account --key-file service-key.json
          gcloud auth configure-docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: gcr.io/latam-fastapi-challenge/fastapi-challenge
      - name: Deploy to GCP
        run: |
          # Setup gcloud CLI
          gcloud config set project latam-fastapi-challenge
          # Deploy to GCP
          gcloud run deploy fastapi-challenge-jpdattas --image gcr.io/latam-fastapi-challenge/fastapi-challenge --region southamerica-west1 --platform managed
          
  stress-test:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        make install
    - name: Run stress test
      run: make stress-test
